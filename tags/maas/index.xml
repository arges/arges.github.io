<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>maas on</title><link>chrisarges.net/tags/maas/</link><description>Recent content in maas on</description><generator>Hugo -- gohugo.io</generator><copyright>Chris J Arges</copyright><lastBuildDate>Wed, 27 May 2015 13:02:46 -0500</lastBuildDate><atom:link href="chrisarges.net/tags/maas/index.xml" rel="self" type="application/rss+xml"/><item><title>accessing maas database directly</title><link>chrisarges.net/posts/2015-05-27-accessing-maas-db-directly/</link><pubDate>Wed, 27 May 2015 13:02:46 -0500</pubDate><guid>chrisarges.net/posts/2015-05-27-accessing-maas-db-directly/</guid><description>Let&amp;rsquo;s say you&amp;rsquo;ve messed up your MAAS installation and have no idea how to recover data about your nodes. Have no fear, you can access the django managed database directly.
Just use the following as root:
maas-region-admin dbshell --installed Now you have access to an SQL command line interface.
For example if I want to see all hostnames and power_parameters for my servers, I can do the following:
select hostname,power_parameters from maasserver_node;</description></item><item><title>manually deploying openstack with a virtual maas on ubuntu trusty (part 2)</title><link>chrisarges.net/posts/2014-06-16-manually-deploying-openstack-with_16/</link><pubDate>Mon, 16 Jun 2014 10:16:00 -0700</pubDate><guid>chrisarges.net/posts/2014-06-16-manually-deploying-openstack-with_16/</guid><description>In the previous post, I went over how to setup a virtual MAAS environment using KVM [1]. Here I will explain how to setup Juju for use with this environment. For this setup, weâ€™ll use the maas-server as the juju client to interact with the cluster.
This guide was very useful:
https://maas.ubuntu.com/docs/juju-quick-start.html
Update to the latest stable tools:
sudo apt-add-repository ppa:juju/stable
sudo apt-get update
Next we want to setup juju on the host machine.</description></item><item><title>manually deploying openstack with a virtual maas on ubuntu trusty (part 1)</title><link>chrisarges.net/posts/2014-06-13-manually-deploying-openstack-with/</link><pubDate>Fri, 13 Jun 2014 15:05:00 -0700</pubDate><guid>chrisarges.net/posts/2014-06-13-manually-deploying-openstack-with/</guid><description>The goal of this new few series of posts is to be able to setup virtual machines to simulate a real-world openstack deployment using maas and juju. This goes through setting up a maas-server in a VM as well as setting up maas-nodes in VMs and getting them enlisted/commissioned into the maas-server. Next juju is configured to use the maas cluster. Finally, openstack is deployed using juju. OverviewRequirementsIdeally, a large server with 16 cores, 32G memory, 500G disk.</description></item><item><title>using LTS HWE kernels with MAAS nodes</title><link>chrisarges.net/posts/2014-03-05-using-lts-hwe-kernels-with-maas-nodes/</link><pubDate>Wed, 05 Mar 2014 14:21:00 -0800</pubDate><guid>chrisarges.net/posts/2014-03-05-using-lts-hwe-kernels-with-maas-nodes/</guid><description>Once you get machines setup using MAAS, you may want to be able to install an alternative kernel when starting a machine. Here&amp;rsquo;s how to do it.
This is assuming we have already commissioned a node, but have not started it.
If we are using the normal installer with MAAS do the following: Edit /etc/maas/preseeds/preseed_master on your maas-server
Add the second line as shown:
d-i base-installer/kernel/image string linux-server d-i base-installer/kernel/override-image string linux-generic-lts-saucy Start the node, Now when you boot you should be using the 3.</description></item></channel></rss>