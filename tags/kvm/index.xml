<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kvm on</title><link>chrisarges.net/tags/kvm/</link><description>Recent content in kvm on</description><generator>Hugo -- gohugo.io</generator><copyright>Chris J Arges</copyright><lastBuildDate>Mon, 13 Apr 2015 12:24:22 -0500</lastBuildDate><atom:link href="chrisarges.net/tags/kvm/index.xml" rel="self" type="application/rss+xml"/><item><title>qemu/kvm guest debugging</title><link>chrisarges.net/posts/2015-04-13-qemu-kvm-guest-debugging/</link><pubDate>Mon, 13 Apr 2015 12:24:22 -0500</pubDate><guid>chrisarges.net/posts/2015-04-13-qemu-kvm-guest-debugging/</guid><description>Occasionally it is useful to debug a running guest VM&amp;rsquo;s kernel. Setup your host machine for virtual machine hosting with QEMU/KVM, and add ddebs to your host system using this wiki.
Next, compile your own qemu with --enable-debug. Setup your environment to use this binary (if using libvirt), or call it directly using qemu.
Ensure you have vmlinux of the L1 guest somewhere in your L0 machine.
First, setup your L1 guest.</description></item><item><title>using ktest.pl with ubuntu</title><link>chrisarges.net/posts/2014-07-01-using-ktestpl-with-ubuntu/</link><pubDate>Tue, 01 Jul 2014 13:10:00 -0700</pubDate><guid>chrisarges.net/posts/2014-07-01-using-ktestpl-with-ubuntu/</guid><description>Bisecting the kernel is one of those tasks that&amp;rsquo;s time-consuming and error prone. Ktest.pl is a script that lives in the linux kernel source tree that helps to automate this process. The script is extremely extensible and as such takes time to understand which variables need to be set and where. In this post, I&amp;rsquo;ll go over how to perform a kernel bisection using a VM as the target machine. In this example I&amp;rsquo;m using &amp;lsquo;ubuntu&amp;rsquo; as the VM name.</description></item><item><title>creating a local vm easily and automatically</title><link>chrisarges.net/posts/2014-03-05-creating-local-vm-easily-and/</link><pubDate>Wed, 05 Mar 2014 14:22:00 -0800</pubDate><guid>chrisarges.net/posts/2014-03-05-creating-local-vm-easily-and/</guid><description>This is the nifty little snippet I use to create a quick and dirty VM for testing. Just apt-get install vmbuilder and run the following:
NAME=&amp;#34;ubuntu&amp;#34; vmbuilder kvm ubuntu --arch &amp;#39;amd64&amp;#39; --suite &amp;#39;precise&amp;#39; \ --rootsize &amp;#39;8096&amp;#39; \ --mem &amp;#39;1024&amp;#39; \ --components &amp;#39;main,universe&amp;#39; \ --addpkg vim \ --addpkg openssh-server \ --addpkg bash-completion \ --user &amp;#39;ubuntu&amp;#39; --pass &amp;#39;ubuntu&amp;#39; \ -d /var/lib/libvirt/images/${NAME} \ --libvirt qemu:///system \ -o \ -v --debug \ --hostname ${NAME} If you need additional help consult the serverguide</description></item><item><title>creating a local vm domain from an ubuntu cloud image</title><link>chrisarges.net/posts/2014-02-17-creating-local-vm-domain-from-ubuntu/</link><pubDate>Mon, 17 Feb 2014 11:43:00 -0800</pubDate><guid>chrisarges.net/posts/2014-02-17-creating-local-vm-domain-from-ubuntu/</guid><description>It is very convenient to be able to quickly spin up a local VM in order to do some sort of bug verification or testing. Generally I can use a cloud provider to spin up an instance, but occasionally you need the flexibility of a local VM in order to setup more complex networking or other specific environments.
This link was extremely helpful in figuring our how to setup a ready to boot image, but I noticed a few issues.</description></item><item><title>automatic bisection of qemu with console and monitor interaction</title><link>chrisarges.net/posts/2013-12-16-automatic-bisection-of-qemu-with/</link><pubDate>Mon, 16 Dec 2013 14:39:00 -0800</pubDate><guid>chrisarges.net/posts/2013-12-16-automatic-bisection-of-qemu-with/</guid><description>I had some fun debugging a performance issue after VM migration on v1.0. Because this was fixed in newer versions, a bisect was in order. Doing this manually becomes very tedious so writing some scripts to use git bisect run really helps. Here I&amp;rsquo;ll document how I did this in case others find it useful when trying to bisect issues in qemu.
First step is getting the problem reproducible using the command line.</description></item></channel></rss>