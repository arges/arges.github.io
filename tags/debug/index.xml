<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>debug on</title><link>/tags/debug/</link><description>Recent content in debug on</description><generator>Hugo -- gohugo.io</generator><copyright>Chris J Arges</copyright><lastBuildDate>Thu, 30 Jul 2015 15:20:31 -0500</lastBuildDate><atom:link href="/tags/debug/index.xml" rel="self" type="application/rss+xml"/><item><title>linux make deb-pkg speedup</title><link>/posts/2015-07-30-linux-make-deb-pkg-speedup/</link><pubDate>Thu, 30 Jul 2015 15:20:31 -0500</pubDate><guid>/posts/2015-07-30-linux-make-deb-pkg-speedup/</guid><description>Because I&amp;rsquo;ve run make deb-pkg so many times, I&amp;rsquo;ve started to see exactly where it starts to slow down even with really large machines. Observing cpu usage, I noticed that many parts of the build were serialized on a single core. Upon further investigation I found the following.
Upstream Packaging Module installation takes a really long time, and when building with make deb-pkg -jN, you&amp;rsquo;ll see output like the following:</description></item><item><title>qemu/kvm guest debugging</title><link>/posts/2015-04-13-qemu-kvm-guest-debugging/</link><pubDate>Mon, 13 Apr 2015 12:24:22 -0500</pubDate><guid>/posts/2015-04-13-qemu-kvm-guest-debugging/</guid><description>Occasionally it is useful to debug a running guest VM&amp;rsquo;s kernel. Setup your host machine for virtual machine hosting with QEMU/KVM, and add ddebs to your host system using this wiki.
Next, compile your own qemu with --enable-debug. Setup your environment to use this binary (if using libvirt), or call it directly using qemu.
Ensure you have vmlinux of the L1 guest somewhere in your L0 machine.
First, setup your L1 guest.</description></item></channel></rss>