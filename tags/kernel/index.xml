<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kernel on</title><link>chrisarges.net/tags/kernel/</link><description>Recent content in kernel on</description><generator>Hugo -- gohugo.io</generator><copyright>Chris J Arges</copyright><lastBuildDate>Thu, 21 Mar 2019 11:54:37 -0500</lastBuildDate><atom:link href="chrisarges.net/tags/kernel/index.xml" rel="self" type="application/rss+xml"/><item><title>bpf for linux tracing</title><link>chrisarges.net/posts/2019-03-21-bpf-for-tracing/</link><pubDate>Thu, 21 Mar 2019 11:54:37 -0500</pubDate><guid>chrisarges.net/posts/2019-03-21-bpf-for-tracing/</guid><description>Overview Originally called eBPF for extended Berkeley Packet Filter, BPF is an in-kernel bytecode interpreter that is very multi-purpose. In this post, I&amp;rsquo;m going to focus on its tracing capabilities.
To use BPF one can use the bpf syscall. This provides a way to both load BPF bytecode programs and also create memory maps for sharing data between kernel and user space.
Because of the complexity, using bpf in a DIY method becomes a bit complex.</description></item><item><title>the magic of linux clone</title><link>chrisarges.net/posts/2019-01-14-the-magic-of-linux-clone/</link><pubDate>Mon, 14 Jan 2019 12:44:27 -0600</pubDate><guid>chrisarges.net/posts/2019-01-14-the-magic-of-linux-clone/</guid><description>Processes and threads are concepts that have been used across many operating systems and programming languages. While we tend to think of &amp;lsquo;process&amp;rsquo; as a heavy thing and &amp;rsquo;thread&amp;rsquo; as a light thing, how they are implemented and handled depends on context. This article will focus on how the Linux operating system handles these concepts and the mechanisms used.
Creating a new process Generally in Linux if you want to create a new process in C you can do the following:</description></item><item><title>tracing in linux</title><link>chrisarges.net/posts/2018-10-04-tracing-in-linux/</link><pubDate>Thu, 04 Oct 2018 09:39:10 -0500</pubDate><guid>chrisarges.net/posts/2018-10-04-tracing-in-linux/</guid><description>Tracing in Linux is robust, flexible and has many options. So what mechanisms exist both in kernel and user space for instrumenting the kernel? In addition what is available in which kernel version, and what requirements does each technology require? Here we&amp;rsquo;ll mostly focus on syscall tracing.
Overview A great overview on Linux tracing systems can be found here. Overall thinking about tracing systems as data sources (in kernel), and frontends help explain why there are so many tools.</description></item><item><title>flashing coreboot on an x60t</title><link>chrisarges.net/posts/2016-02-08-coreboot-on-an-x60t/</link><pubDate>Mon, 08 Feb 2016 08:48:47 -0600</pubDate><guid>chrisarges.net/posts/2016-02-08-coreboot-on-an-x60t/</guid><description>I was gifted a dusty X60t and remembered how it was one of the more well supported targets for coreboot/libreboot. Thus I decided to take it apart and reflash the BIOS. The following articles explains how this is done. Note, that it is possible to flash the BIOS from a booted Linux install; I decided to do things the hard way.
Disassembly This guide does a really good job of explaining how to take apart the X60t.</description></item><item><title>using ktest.pl with ubuntu</title><link>chrisarges.net/posts/2014-07-01-using-ktestpl-with-ubuntu/</link><pubDate>Tue, 01 Jul 2014 13:10:00 -0700</pubDate><guid>chrisarges.net/posts/2014-07-01-using-ktestpl-with-ubuntu/</guid><description>Bisecting the kernel is one of those tasks that&amp;rsquo;s time-consuming and error prone. Ktest.pl is a script that lives in the linux kernel source tree that helps to automate this process. The script is extremely extensible and as such takes time to understand which variables need to be set and where. In this post, I&amp;rsquo;ll go over how to perform a kernel bisection using a VM as the target machine. In this example I&amp;rsquo;m using &amp;lsquo;ubuntu&amp;rsquo; as the VM name.</description></item><item><title>using kgraft with ubuntu</title><link>chrisarges.net/posts/2014-06-06-using-kgraft-with-ubuntu/</link><pubDate>Fri, 06 Jun 2014 11:50:00 -0700</pubDate><guid>chrisarges.net/posts/2014-06-06-using-kgraft-with-ubuntu/</guid><description>New live kernel patching projects have hit LKML recently here and here, and I&amp;rsquo;ve taken the opportunity to test drive kGraft with the Ubuntu kernel. This post documents how to get a sample patch working.
First, I had to take the patches and apply them against the ubuntu-utopic kernel, which is based on 3.15-rc8 as of this post. They cherry-picked cleanly and the branch I&amp;rsquo;m using is stored here. In addition to applying the patches I had to also enable CONFIG_KGRAFT.</description></item><item><title>netfilter hooks to snoop packets</title><link>chrisarges.net/posts/2014-03-24-netfilter-hooks-to-snoop-packets/</link><pubDate>Mon, 24 Mar 2014 07:47:00 -0700</pubDate><guid>chrisarges.net/posts/2014-03-24-netfilter-hooks-to-snoop-packets/</guid><description>I&amp;rsquo;ve written a short netfilter hook to help snoop some outgoing packets. You can view the source code here. I read a few articles to get an idea of how to put things together.</description></item><item><title>using git send-email for sending kernel patches</title><link>chrisarges.net/posts/2013-07-18-using-git-send-email-for-sending-kernel/</link><pubDate>Thu, 18 Jul 2013 15:27:00 -0700</pubDate><guid>chrisarges.net/posts/2013-07-18-using-git-send-email-for-sending-kernel/</guid><description>Sending patches to a Linux kernel mailing list can be done easily using git-send-email. This post will help setup your environment and show you how to format the git send-email command. In addition there are some more advanced features that help when you need to send from multiple accounts.
Git Setup First, install git and git-email. Then, setup ~/.gitconfig for your user and proper sendemail section. This shows a sendemail setup for a typical single gmail account.</description></item></channel></rss>